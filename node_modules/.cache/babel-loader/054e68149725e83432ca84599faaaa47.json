{"ast":null,"code":"var _jsxFileName = \"/home/roan/Desktop/fe-nc-news/front_nc_news/src/components/Voter.jsx\";\nimport React, { Component } from 'react';\nimport * as api from '../utils/axiosRequests';\n\nclass Voter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      optimisticVotes: 0,\n      type: 'none'\n    };\n\n    this.handleVote = event => {\n      let increment = +event.target.id;\n      let id = this.props.id;\n      let type = this.props.type;\n\n      if (this.state.optimisticVotes !== 0) {\n        api.vertasilePatch(-this.state.optimisticVotes, id, type);\n        this.setState({\n          optimisticVotes: 0\n        });\n      } else {\n        api.vertasilePatch(increment, id, type).then(() => {\n          this.setState({\n            optimisticVotes: increment\n          });\n          console.log(this.state.optimisticVotes);\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      type: this.props.type\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleVote,\n      id: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Upvote\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.state.optimisticVotes ? this.props.votes + this.state.optimisticVotes : this.props.votes), React.createElement(\"button\", {\n      onClick: this.handleVote,\n      id: \"-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Downvote\"));\n  }\n\n}\n\nexport default Voter;","map":{"version":3,"sources":["/home/roan/Desktop/fe-nc-news/front_nc_news/src/components/Voter.jsx"],"names":["React","Component","api","Voter","state","optimisticVotes","type","handleVote","event","increment","target","id","props","vertasilePatch","setState","then","console","log","componentDidMount","render","votes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,wBAArB;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BG,KAD4B,GACpB;AACNC,MAAAA,eAAe,EAAE,CADX;AAENC,MAAAA,IAAI,EAAE;AAFA,KADoB;;AAAA,SAU5BC,UAV4B,GAUfC,KAAK,IAAI;AACpB,UAAIC,SAAS,GAAG,CAACD,KAAK,CAACE,MAAN,CAAaC,EAA9B;AACA,UAAIA,EAAE,GAAG,KAAKC,KAAL,CAAWD,EAApB;AACA,UAAIL,IAAI,GAAG,KAAKM,KAAL,CAAWN,IAAtB;;AACA,UAAI,KAAKF,KAAL,CAAWC,eAAX,KAA+B,CAAnC,EAAsC;AACpCH,QAAAA,GAAG,CAACW,cAAJ,CAAmB,CAAC,KAAKT,KAAL,CAAWC,eAA/B,EAAgDM,EAAhD,EAAoDL,IAApD;AACA,aAAKQ,QAAL,CAAc;AAAET,UAAAA,eAAe,EAAE;AAAnB,SAAd;AACD,OAHD,MAGO;AACLH,QAAAA,GAAG,CAACW,cAAJ,CAAmBJ,SAAnB,EAA8BE,EAA9B,EAAkCL,IAAlC,EAAwCS,IAAxC,CAA6C,MAAM;AACjD,eAAKD,QAAL,CAAc;AAAET,YAAAA,eAAe,EAAEI;AAAnB,WAAd;AACAO,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,eAAvB;AACD,SAHD;AAID;AACF,KAvB2B;AAAA;;AAM5Ba,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,QAAL,CAAc;AAAER,MAAAA,IAAI,EAAE,KAAKM,KAAL,CAAWN;AAAnB,KAAd;AACD;;AAiBDa,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKZ,UAAtB;AAAkC,MAAA,EAAE,EAAC,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKH,KAAL,CAAWC,eAAX,GACG,KAAKO,KAAL,CAAWQ,KAAX,GAAmB,KAAKhB,KAAL,CAAWC,eADjC,GAEG,KAAKO,KAAL,CAAWQ,KAHjB,CAJF,EASE;AAAQ,MAAA,OAAO,EAAE,KAAKb,UAAtB;AAAkC,MAAA,EAAE,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,CADF;AAeD;;AAzC2B;;AA4C9B,eAAeJ,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as api from '../utils/axiosRequests';\n\nclass Voter extends Component {\n  state = {\n    optimisticVotes: 0,\n    type: 'none'\n  };\n\n  componentDidMount() {\n    this.setState({ type: this.props.type });\n  }\n\n  handleVote = event => {\n    let increment = +event.target.id;\n    let id = this.props.id;\n    let type = this.props.type;\n    if (this.state.optimisticVotes !== 0) {\n      api.vertasilePatch(-this.state.optimisticVotes, id, type);\n      this.setState({ optimisticVotes: 0 });\n    } else {\n      api.vertasilePatch(increment, id, type).then(() => {\n        this.setState({ optimisticVotes: increment });\n        console.log(this.state.optimisticVotes);\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.handleVote} id=\"1\">\n          Upvote\n        </button>\n        <p>\n          {this.state.optimisticVotes\n            ? this.props.votes + this.state.optimisticVotes\n            : this.props.votes}\n        </p>\n        <button onClick={this.handleVote} id=\"-1\">\n          Downvote\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Voter;\n"]},"metadata":{},"sourceType":"module"}