{"ast":null,"code":"var _jsxFileName = \"/home/roan/Desktop/fe-nc-news/src/components/Voter.jsx\";\nimport React, { Component } from 'react';\nimport * as api from '../utils/axiosRequests';\n\nclass Voter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      optimisticVotes: 0\n    };\n\n    this.handleVote = ({\n      event: {\n        target\n      }\n    }) => {\n      let increment = +target.id;\n      let thingId = this.props.id;\n      let type = this.props.type;\n\n      if (this.state.optimisticVotes !== 0) {\n        api.vertasilePatch(-this.state.optimisticVotes, thingId, type);\n        this.setState({\n          optimisticVotes: 0\n        });\n      } else {\n        api.vertasilePatch(increment, thingId, type).then(() => {\n          this.setState({\n            optimisticVotes: increment\n          });\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Voter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"VoterText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Votes: \"), React.createElement(\"button\", {\n      className: \"VoteButton\",\n      onClick: this.handleVote,\n      id: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Upvote\"), React.createElement(\"p\", {\n      className: \"VoterText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.state.optimisticVotes ? this.props.votes + this.state.optimisticVotes : this.props.votes), React.createElement(\"button\", {\n      className: \"VoteButton\",\n      onClick: this.handleVote,\n      id: \"-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Downvote\"));\n  }\n\n}\n\nexport default Voter;","map":{"version":3,"sources":["/home/roan/Desktop/fe-nc-news/src/components/Voter.jsx"],"names":["React","Component","api","Voter","state","optimisticVotes","handleVote","event","target","increment","id","thingId","props","type","vertasilePatch","setState","then","render","votes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,wBAArB;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BG,KAD4B,GACpB;AACNC,MAAAA,eAAe,EAAE;AADX,KADoB;;AAAA,SAK5BC,UAL4B,GAKf,CAAC;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA;AAAF;AAAT,KAAD,KAA2B;AACtC,UAAIC,SAAS,GAAG,CAACD,MAAM,CAACE,EAAxB;AACA,UAAIC,OAAO,GAAG,KAAKC,KAAL,CAAWF,EAAzB;AACA,UAAIG,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAtB;;AACA,UAAI,KAAKT,KAAL,CAAWC,eAAX,KAA+B,CAAnC,EAAsC;AACpCH,QAAAA,GAAG,CAACY,cAAJ,CAAmB,CAAC,KAAKV,KAAL,CAAWC,eAA/B,EAAgDM,OAAhD,EAAyDE,IAAzD;AACA,aAAKE,QAAL,CAAc;AAAEV,UAAAA,eAAe,EAAE;AAAnB,SAAd;AACD,OAHD,MAGO;AACLH,QAAAA,GAAG,CAACY,cAAJ,CAAmBL,SAAnB,EAA8BE,OAA9B,EAAuCE,IAAvC,EAA6CG,IAA7C,CAAkD,MAAM;AACtD,eAAKD,QAAL,CAAc;AAAEV,YAAAA,eAAe,EAAEI;AAAnB,WAAd;AACD,SAFD;AAGD;AACF,KAjB2B;AAAA;;AAmB5BQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAGE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAE,KAAKX,UAA7C;AAAyD,MAAA,EAAE,EAAC,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAME;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,CAAWC,eAAX,GACG,KAAKO,KAAL,CAAWM,KAAX,GAAmB,KAAKd,KAAL,CAAWC,eADjC,GAEG,KAAKO,KAAL,CAAWM,KAHjB,CANF,EAWE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAE,KAAKZ,UAA7C;AAAyD,MAAA,EAAE,EAAC,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,CADF;AAiBD;;AArC2B;;AAwC9B,eAAeH,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as api from '../utils/axiosRequests';\n\nclass Voter extends Component {\n  state = {\n    optimisticVotes: 0\n  };\n\n  handleVote = ({ event: { target } }) => {\n    let increment = +target.id;\n    let thingId = this.props.id;\n    let type = this.props.type;\n    if (this.state.optimisticVotes !== 0) {\n      api.vertasilePatch(-this.state.optimisticVotes, thingId, type);\n      this.setState({ optimisticVotes: 0 });\n    } else {\n      api.vertasilePatch(increment, thingId, type).then(() => {\n        this.setState({ optimisticVotes: increment });\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"Voter\">\n        <h5 className=\"VoterText\">Votes: </h5>\n\n        <button className=\"VoteButton\" onClick={this.handleVote} id=\"1\">\n          Upvote\n        </button>\n        <p className=\"VoterText\">\n          {this.state.optimisticVotes\n            ? this.props.votes + this.state.optimisticVotes\n            : this.props.votes}\n        </p>\n        <button className=\"VoteButton\" onClick={this.handleVote} id=\"-1\">\n          Downvote\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Voter;\n"]},"metadata":{},"sourceType":"module"}