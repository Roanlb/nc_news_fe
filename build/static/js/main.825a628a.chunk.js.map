{"version":3,"sources":["utils/axiosRequests.js","components/Header.jsx","components/NavBar.jsx","components/Voter.jsx","components/ArticleCard.jsx","components/ErrorPage.jsx","components/ArticleList.jsx","components/CommentList.jsx","components/SingleArticle.jsx","App.js","serviceWorker.js","index.js"],"names":["axios","require","module","exports","getTopics","get","then","data","topics","getSingleArticle","id","article","getArticleComments","comments","getSortedArticles","specifiedTopic","selector","params","topic","sort_by","articles","postComment","comment","user","post","username","body","deleteComment","delete","vertasilePatch","increment","type","console","log","patch","inc_votes","Header","className","to","NavBar","state","isLoading","err","api","setState","catch","response","msg","this","src","alt","map","key","slug","description","Component","Voter","optimisticVotes","handleVote","event","target","props","onClick","votes","ArticleCard","title","mainFeed","comment_count","article_id","ErrorPage","width","ArticleList","handleSelectChange","value","prevProps","prevState","name","onChange","CommentList","handleDelete","author","comment_id","created_at","SingleArticle","commentToPost","commentWarning","handleChange","handlePostComment","preventDefault","currentState","parentElement","Promise","all","resolutions","onSubmit","placeholder","App","path","default","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iGAAA,IAAMA,EAAQC,EAAQ,IA2DtBC,EAAOC,QAAU,CACfC,UA1DgB,WAChB,OAAOJ,EACJK,IAAI,qDACJC,MAAK,YACJ,OAD8B,EAAvBC,KAAQC,WAwDnBC,iBAnDuB,SAAAC,GACvB,OAAOV,EACJK,IADI,8DACuDK,IAC3DJ,MAAK,YACJ,OAD+B,EAAxBC,KAAQI,YAiDnBC,mBA5CyB,SAAAF,GACzB,OAAOV,EACJK,IADI,8DACuDK,EADvD,cAEJJ,MAAK,YACJ,OADgC,EAAzBC,KAAQM,aA0CnBC,kBArCwB,SAACC,EAAgBC,GACzC,OAAOhB,EACJK,IADI,sDACuD,CAC1DY,OAAQ,CAAEC,MAAOH,EAAgBI,QAASH,KAE3CV,MAAK,YACJ,OADgC,EAAzBC,KAAQa,aAiCnBC,YA5BkB,SAACC,EAASC,EAAMb,GAClC,OAAOV,EAAMwB,KAAN,8DACkDd,EADlD,aAEL,CAAEe,SAAUF,EAAMG,KAAMJ,KA0B1BK,cAtBoB,SAAAjB,GACpB,OAAOV,EAAM4B,OAAN,8DACkDlB,KAqBzDmB,eAjBqB,SAACC,EAAWpB,EAAIqB,GAErC,OADAC,QAAQC,IAAIH,EAAWpB,EAAIqB,GACpB/B,EAAMkC,MAAN,qDACyCH,EADzC,YACiDrB,GACtD,CACEyB,UAAWL,O,oNCtCFM,EAbA,SAAC,GAAc,IAAZb,EAAW,EAAXA,KAChB,OACE,yBAAKc,UAAU,UACb,kBAAC,IAAD,CAAMC,GAAI,KACR,yCAEF,4BACGf,EAAI,kBAAcA,EAAd,uBAA0C,2B,OCyCxCgB,E,2MA9CbC,MAAQ,CAAEhC,OAAQ,GAAIiC,WAAW,EAAMC,IAAK,I,mFAEvB,IAAD,OAClBC,cAEGrC,MAAK,SAAAE,GACJ,EAAKoC,SAAS,CAAEpC,OAAQA,EAAQiC,WAAW,OAE5CI,OAAM,YAAmB,IAAhBC,EAAe,EAAfA,SACR,EAAKF,SAAS,CAAEF,IAAKI,EAASvC,KAAKwC,IAAKN,WAAW,S,+BAKvD,OACE,yBAAKJ,UAAU,UACb,wBAAIA,UAAU,eAAd,qBACCW,KAAKR,MAAMC,WACV,oCACE,0CACA,yBACEQ,IAAI,6DACJC,IAAI,6CAITF,KAAKR,MAAME,IACV,kEAEA,oCACE,yBAAKL,UAAU,cACZW,KAAKR,MAAMhC,OAAO2C,KAAI,SAAAjC,GACrB,OACE,yBAAKmB,UAAU,YAAYe,IAAKlC,EAAMmC,MACpC,kBAAC,IAAD,CAAMf,GAAIpB,EAAMmC,MAAOnC,EAAMmC,MAC7B,4BAAKnC,EAAMoC,wB,GApCVC,aCuCNC,E,2MAvCbhB,MAAQ,CACNiB,gBAAiB,G,EAGnBC,WAAa,SAAAC,GACX,IAAI7B,GAAa6B,EAAMC,OAAOlD,GAC1BA,EAAK,EAAKmD,MAAMnD,GAChBqB,EAAO,EAAK8B,MAAM9B,KACa,IAA/B,EAAKS,MAAMiB,iBACbd,kBAAoB,EAAKH,MAAMiB,gBAAiB/C,EAAIqB,GACpD,EAAKa,SAAS,CAAEa,gBAAiB,KAEjCd,iBAAmBb,EAAWpB,EAAIqB,GAAMzB,MAAK,WAC3C,EAAKsC,SAAS,CAAEa,gBAAiB3B,Q,wEAMrC,OACE,yBAAKO,UAAU,SACb,wBAAIA,UAAU,aAAd,WAEA,4BAAQA,UAAU,aAAayB,QAASd,KAAKU,WAAYhD,GAAG,KAA5D,UAGA,uBAAG2B,UAAU,aACVW,KAAKR,MAAMiB,gBACRT,KAAKa,MAAME,MAAQf,KAAKR,MAAMiB,gBAC9BT,KAAKa,MAAME,OAEjB,4BAAQ1B,UAAU,aAAayB,QAASd,KAAKU,WAAYhD,GAAG,MAA5D,iB,GAhCY6C,aCuBLS,EAtBK,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,MAAOvD,EAAgD,EAAhDA,GAAIQ,EAA4C,EAA5CA,MAAOgD,EAAqC,EAArCA,SAAUH,EAA2B,EAA3BA,MAAOI,EAAoB,EAApBA,cACxD,OACE,wBAAI9B,UAAU,eACZ,kBAAC,IAAD,CAAMC,GAAE,WAAMpB,EAAN,YAAeR,GAAM0D,WAAY1D,EAAI2B,UAAU,gBACrD,4BAAK4B,IAGP,2BAAO5B,UAAU,gBACf,kBAAC,EAAD,CAAO0B,MAAOA,EAAOhC,KAAK,WAAWrB,GAAIA,KAG1CwD,EACC,kBAAC,IAAD,CAAM7B,UAAU,gBAAgBC,GAAE,WAAMpB,IACtC,uCAAaA,EAAb,aAGF,8CAAoBiD,KCLbE,EAbG,SAAA3B,GAChB,OACE,iCACE,qCAAWA,EAAIA,KACf,yBACEO,IAAI,uFACJC,IAAI,2CACJoB,MAAM,WC4ECC,E,2MA/Eb/B,MAAQ,CAAEpB,SAAU,GAAIqB,WAAW,EAAMC,IAAK,I,EA6B9C8B,mBAAqB,YAA4B,IAAfC,EAAc,EAAxBb,OAAUa,MAChCzC,QAAQC,IAAIwC,EAAO,SACnBzC,QAAQC,IAAI,EAAK4B,MAAM3C,MAAO,qBAC9ByB,oBAAsB,EAAKkB,MAAM3C,MAAOuD,GAAOnE,MAAK,SAAAc,GAClD,EAAKwB,SAAS,CAAExB,SAAUA,IAAYyB,OAAM,YAAmB,IAAhBC,EAAe,EAAfA,SAC7C,EAAKF,SAAS,CAAEF,IAAKI,EAASvC,KAAKwC,IAAKN,WAAW,W,mFAhCpC,IAAD,OAClBE,oBACqBK,KAAKa,MAAM3C,OAC7BZ,MAAK,SAAAc,GACJ,EAAKwB,SAAS,CAAExB,SAAUA,EAAUqB,WAAW,OAEhDI,OAAM,YAAmB,IAAhBC,EAAe,EAAfA,SACRd,QAAQC,IAAIa,GACZ,EAAKF,SAAS,CAAEF,IAAKI,EAASvC,KAAKwC,IAAKN,WAAW,S,yCAItCiC,EAAWC,GAAY,IAAD,OACnC3B,KAAKa,MAAM3C,QAAUwD,EAAUxD,OACjCyB,oBACqBK,KAAKa,MAAM3C,OAC7BZ,MAAK,SAAAc,GACJ,EAAKwB,SAAS,CACZxB,SAAUA,OAGbyB,OAAM,YAAmB,IAAhBC,EAAe,EAAfA,SACR,EAAKF,SAAS,CAAEF,IAAKI,EAASvC,KAAKwC,IAAKN,WAAW,S,+BAejD,IAAD,OACP,OACE,6BACE,+BACE,wCACA,4BACEmC,KAAK,kBACLlE,GAAG,kBACHmE,SAAU7B,KAAKwB,oBAEf,4BAAQC,MAAM,cAAd,gBACA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,SAAd,WAIJ,wBAAIpC,UAAU,eACXW,KAAKR,MAAMC,YAAcO,KAAKR,MAAME,KAAO,0CAC3CM,KAAKR,MAAMpB,SAAS+B,KAAI,SAAAxC,GAEvB,OADAqB,QAAQC,IAAItB,EAAQoD,OAElB,kBAAC,EAAD,CACEX,IAAKzC,EAAQyD,WACbH,MAAOtD,EAAQsD,MACfF,MAAOpD,EAAQoD,MACf7C,MAAOP,EAAQO,MACfR,GAAIC,EAAQyD,WACZF,SAAU,EAAKL,MAAMK,SACrBC,cAAexD,EAAQwD,oBAM9BnB,KAAKR,MAAME,KAAO,kBAAC,EAAD,CAAWA,IAAKM,KAAKR,MAAME,W,GA1E5Ba,a,QC8BXuB,EAhCK,SAAC,GAAsC,IAApCjE,EAAmC,EAAnCA,SAAUkE,EAAyB,EAAzBA,aAAcxD,EAAW,EAAXA,KAE7C,OADAS,QAAQC,IAAIV,EAAM,uBAEhB,wBAAIc,UAAU,eACXxB,EAASsC,KAAI,SAAA7B,GAEZ,OADAU,QAAQC,IAAIX,EAAQ0D,OAAQzD,GAE1B,wBACE6B,IAAK9B,EAAQ2D,WACbvE,GAAIY,EAAQ2D,WACZ5C,UAAU,cAEV,wBAAIA,UAAU,eAAef,EAAQ0D,QACrC,uBAAG3C,UAAU,eAAef,EAAQI,MACpC,kBAAC,EAAD,CACEqC,MAAOzC,EAAQyC,MACfhC,KAAK,WACLrB,GAAIY,EAAQ2D,aAEd,wBAAI5C,UAAU,eAAd,eAAyCf,EAAQ4D,YAChD3D,IAASD,EAAQ0D,QAChB,4BAAQ3C,UAAU,eAAeyB,QAASiB,GAA1C,gBCkGCI,E,2MAlHb3C,MAAQ,CACN7B,QAAS,GACTE,SAAU,GACVuE,cAAe,GACf1C,IAAK,GACL2C,eAAgB,I,EAGlBC,aAAe,SAAA3B,GACb,EAAKf,SAAS,CAAEwC,cAAezB,EAAMC,OAAOa,S,EAG9Cc,kBAAoB,SAAA5B,GAElB,GADAA,EAAM6B,iBACD,EAAKhD,MAAM4C,eAAkB,EAAKvB,MAAMtC,KAKtC,CACL,IAAI6D,EAAgB,EAAK5C,MAAM4C,cAC3B7D,EAAO,EAAKsC,MAAMtC,KAClB6C,EAAa,EAAKP,MAAMO,WAE5BzB,cACeyC,EAAe7D,EAAM6C,GACjC9D,MAAK,YAA4B,IAAjBgB,EAAgB,EAAxBf,KAAQe,QACf,EAAKsB,UAAS,SAAA6C,GACZ,MAAO,CACL5E,SAAS,CAAES,GAAH,mBAAemE,EAAa5E,WACpCuE,cAAe,UAIpBvC,OAAM,YAAmB,IAAhBC,EAAe,EAAfA,SACR,EAAKF,SAAS,CAAEF,IAAKI,EAASvC,KAAKwC,IAAKN,WAAW,YApBvD,EAAKG,SAAS,CACZyC,eACE,yF,EAuBRN,aAAe,SAAApB,GACb,IAAIsB,EAAatB,EAAMC,OAAO8B,cAAchF,GAC5CiC,gBAAkBsC,GAAY3E,MAAK,WACjCqC,qBACsB,EAAKkB,MAAMO,YAC9B9D,MAAK,SAAAO,GACJ,EAAK+B,SAAS,CAAE/B,SAAUA,OAE3BgC,OAAM,YAAmB,IAAhBC,EAAe,EAAfA,SACR,EAAKF,SAAS,CAAEF,IAAKI,EAASvC,KAAKwC,IAAKN,WAAW,W,mFAKtC,IAAD,OAClBkD,QAAQC,IAAI,CACVjD,mBAAqBK,KAAKa,MAAMO,YAChCzB,qBAAuBK,KAAKa,MAAMO,cAEjC9D,MAAK,SAAAuF,GACJ,EAAKjD,SAAS,CACZjC,QAASkF,EAAY,GACrBhF,SAAUgF,EAAY,QAGzBhD,OAAM,YAAmB,IAAhBC,EAAe,EAAfA,SACR,EAAKF,SAAS,CAAEF,IAAKI,EAASvC,KAAKwC,IAAKN,WAAW,S,+BAMvD,OADAT,QAAQC,IAAIe,KAAKa,MAAMtC,KAAM,mBAE3B,yBAAKb,GAAIsC,KAAKa,MAAMO,YACjBpB,KAAKR,MAAME,IACV,kBAAC,EAAD,CAAWA,IAAKM,KAAKR,MAAME,MAE3B,oCACE,4BAAKM,KAAKR,MAAM7B,QAAQsD,OACxB,kBAAC,EAAD,CACEF,MAAOf,KAAKR,MAAM7B,QAAQoD,MAC1BhC,KAAK,WACLrB,GAAIsC,KAAKa,MAAMO,aAEjB,kBAAC,IAAD,CAAM9B,GAAE,WAAMU,KAAKR,MAAM7B,QAAQO,QAC/B,uCAAa8B,KAAKR,MAAM7B,QAAQO,MAAhC,aAEF,2BAAI8B,KAAKR,MAAM7B,QAAQe,MACvB,wCACA,0BAAMoE,SAAU9C,KAAKuC,mBACnB,gDACA,8BACElD,UAAU,eACVuC,KAAK,cACLlE,GAAG,cACHmE,SAAU7B,KAAKsC,aACfb,MAAOzB,KAAKR,MAAM4C,cAClBW,YAAa/C,KAAKR,MAAM6C,iBAE1B,2BAAOtD,KAAK,YAEbiB,KAAKR,MAAM3B,UACV,kBAAC,EAAD,CACEA,SAAUmC,KAAKR,MAAM3B,SACrBkE,aAAc/B,KAAK+B,aACnBxD,KAAMyB,KAAKa,MAAMtC,a,GA1GLgC,aC0BbyC,E,2MAvBbxD,MAAQ,CACNf,SAAU,a,wEAIV,OACE,yBAAKY,UAAU,OACb,kBAAC,EAAD,CAAQd,KAAMyB,KAAKR,MAAMf,WACzB,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAQY,UAAU,eAChB,kBAAC,EAAD,CAAa4D,KAAK,IAAI/B,UAAU,IAChC,kBAAC,EAAD,CAAa+B,KAAK,UAAU/B,UAAU,IACtC,kBAAC,EAAD,CACE+B,KAAK,sBACL1E,KAAMyB,KAAKR,MAAMf,WAEnB,kBAAC,EAAD,CAAWyE,SAAO,U,GAjBV3C,aCGE4C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxG,MAAK,SAAAyG,GACjCA,EAAaC,kB","file":"static/js/main.825a628a.chunk.js","sourcesContent":["const axios = require('axios');\n\nconst getTopics = () => {\n  return axios\n    .get('https://roanncnewsserver.herokuapp.com/api/topics')\n    .then(({ data: { topics } }) => {\n      return topics;\n    });\n};\n\nconst getSingleArticle = id => {\n  return axios\n    .get(`https://roanncnewsserver.herokuapp.com/api/articles/${id}`)\n    .then(({ data: { article } }) => {\n      return article;\n    });\n};\n\nconst getArticleComments = id => {\n  return axios\n    .get(`https://roanncnewsserver.herokuapp.com/api/articles/${id}/comments`)\n    .then(({ data: { comments } }) => {\n      return comments;\n    });\n};\n\nconst getSortedArticles = (specifiedTopic, selector) => {\n  return axios\n    .get(`https://roanncnewsserver.herokuapp.com/api/articles`, {\n      params: { topic: specifiedTopic, sort_by: selector }\n    })\n    .then(({ data: { articles } }) => {\n      return articles;\n    });\n};\n\nconst postComment = (comment, user, id) => {\n  return axios.post(\n    `https://roanncnewsserver.herokuapp.com/api/articles/${id}/comments`,\n    { username: user, body: comment }\n  );\n};\n\nconst deleteComment = id => {\n  return axios.delete(\n    `https://roanncnewsserver.herokuapp.com/api/comments/${id}`\n  );\n};\n\nconst vertasilePatch = (increment, id, type) => {\n  console.log(increment, id, type);\n  return axios.patch(\n    `https://roanncnewsserver.herokuapp.com/api/${type}/${id}`,\n    {\n      inc_votes: increment\n    }\n  );\n};\n\nmodule.exports = {\n  getTopics,\n  getSingleArticle,\n  getArticleComments,\n  getSortedArticles,\n  postComment,\n  deleteComment,\n  vertasilePatch\n};\n","import React from 'react';\nimport { Link } from '@reach/router';\n\nconst Header = ({ user }) => {\n  return (\n    <div className=\"Header\">\n      <Link to={'/'}>\n        <h3>NC News </h3>\n      </Link>\n      <h4>\n        {user ? `Welcome ${user}, you are logged in` : 'You are not logged in'}\n      </h4>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport * as api from '../utils/axiosRequests';\nimport { Link } from '@reach/router';\n\nclass NavBar extends Component {\n  state = { topics: [], isLoading: true, err: '' };\n\n  componentDidMount() {\n    api\n      .getTopics()\n      .then(topics => {\n        this.setState({ topics: topics, isLoading: false });\n      })\n      .catch(({ response }) => {\n        this.setState({ err: response.data.msg, isLoading: false });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"NavBar\">\n        <h4 className=\"NavBarTitle\"> Stories by topic</h4>\n        {this.state.isLoading && (\n          <>\n            <h4>Loading...</h4>\n            <img\n              src=\"https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif\"\n              alt=\"a triforce logo with the tiles rotating\"\n            />\n          </>\n        )}\n        {this.state.err ? (\n          <h1>Oops! Couldn't find today's topics</h1>\n        ) : (\n          <>\n            <div className=\"NavBarList\">\n              {this.state.topics.map(topic => {\n                return (\n                  <div className=\"NavButton\" key={topic.slug}>\n                    <Link to={topic.slug}>{topic.slug}</Link>\n                    <h6>{topic.description}</h6>\n                  </div>\n                );\n              })}\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\nexport default NavBar;\n","import React, { Component } from 'react';\nimport * as api from '../utils/axiosRequests';\n\nclass Voter extends Component {\n  state = {\n    optimisticVotes: 0\n  };\n\n  handleVote = event => {\n    let increment = +event.target.id;\n    let id = this.props.id;\n    let type = this.props.type;\n    if (this.state.optimisticVotes !== 0) {\n      api.vertasilePatch(-this.state.optimisticVotes, id, type);\n      this.setState({ optimisticVotes: 0 });\n    } else {\n      api.vertasilePatch(increment, id, type).then(() => {\n        this.setState({ optimisticVotes: increment });\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"Voter\">\n        <h5 className=\"VoterText\">Votes: </h5>\n\n        <button className=\"VoteButton\" onClick={this.handleVote} id=\"1\">\n          Upvote\n        </button>\n        <p className=\"VoterText\">\n          {this.state.optimisticVotes\n            ? this.props.votes + this.state.optimisticVotes\n            : this.props.votes}\n        </p>\n        <button className=\"VoteButton\" onClick={this.handleVote} id=\"-1\">\n          Downvote\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Voter;\n","import React from 'react';\nimport { Link } from '@reach/router';\nimport Voter from './Voter';\n\nconst ArticleCard = ({ title, id, topic, mainFeed, votes, comment_count }) => {\n  return (\n    <li className=\"ArticleCard\">\n      <Link to={`/${topic}/${id}`} article_id={id} className=\"ArticleTitle\">\n        <h4>{title}</h4>\n      </Link>\n\n      <aside className=\"ArticleVoter\">\n        <Voter votes={votes} type=\"articles\" id={id} />\n      </aside>\n\n      {mainFeed ? (\n        <Link className=\"ArticleSeeAll\" to={`/${topic}`}>\n          <h6>See all {topic} stories</h6>\n        </Link>\n      ) : (\n        <h6>Comment count: {comment_count}</h6>\n      )}\n    </li>\n  );\n};\n\nexport default ArticleCard;\n","import React from 'react';\n\nconst ErrorPage = err => {\n  return (\n    <section>\n      <h1>Oops! {err.err}</h1>\n      <img\n        src=\"https://www.ionos.com/digitalguide/fileadmin/DigitalGuide/Teaser/404-not-found-t.jpg\"\n        alt=\"A giant baby who has just eaten the page\"\n        width=\"100%\"\n      />\n    </section>\n  );\n};\n\nexport default ErrorPage;\n","import React, { Component } from 'react';\nimport * as api from '../utils/axiosRequests';\nimport ArticleCard from '../components/ArticleCard';\nimport ErrorPage from './ErrorPage';\n\nclass ArticleList extends Component {\n  state = { articles: [], isLoading: true, err: '' };\n\n  componentDidMount() {\n    api\n      .getSortedArticles(this.props.topic)\n      .then(articles => {\n        this.setState({ articles: articles, isLoading: false });\n      })\n      .catch(({ response }) => {\n        console.log(response);\n        this.setState({ err: response.data.msg, isLoading: false });\n      });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.topic !== prevProps.topic) {\n      api\n        .getSortedArticles(this.props.topic)\n        .then(articles => {\n          this.setState({\n            articles: articles\n          });\n        })\n        .catch(({ response }) => {\n          this.setState({ err: response.data.msg, isLoading: false });\n        });\n    }\n  }\n\n  handleSelectChange = ({ target: { value } }) => {\n    console.log(value, 'value');\n    console.log(this.props.topic, 'this proprs topic');\n    api.getSortedArticles(this.props.topic, value).then(articles => {\n      this.setState({ articles: articles }).catch(({ response }) => {\n        this.setState({ err: response.data.msg, isLoading: false });\n      });\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <aside>\n          <h4>Sort by:</h4>\n          <select\n            name=\"articleSelector\"\n            id=\"articleSelector\"\n            onChange={this.handleSelectChange}\n          >\n            <option value=\"created_at\">Date created</option>\n            <option value=\"comment_count\">Comment count</option>\n            <option value=\"votes\">Votes</option>\n          </select>\n        </aside>\n\n        <ul className=\"ArticleList\">\n          {this.state.isLoading && !this.state.err && <h4>Loading...</h4>}\n          {this.state.articles.map(article => {\n            console.log(article.votes);\n            return (\n              <ArticleCard\n                key={article.article_id}\n                title={article.title}\n                votes={article.votes}\n                topic={article.topic}\n                id={article.article_id}\n                mainFeed={this.props.mainFeed}\n                comment_count={article.comment_count}\n              />\n            );\n          })}\n        </ul>\n\n        {this.state.err && <ErrorPage err={this.state.err} />}\n      </div>\n    );\n  }\n}\n\nexport default ArticleList;\n","import React from 'react';\nimport Voter from './Voter';\n\nconst CommentList = ({ comments, handleDelete, user }) => {\n  console.log(user, 'user in commentList');\n  return (\n    <ul className=\"CommentList\">\n      {comments.map(comment => {\n        console.log(comment.author, user);\n        return (\n          <li\n            key={comment.comment_id}\n            id={comment.comment_id}\n            className=\"OneComment\"\n          >\n            <h5 className=\"CommentText\">{comment.author}</h5>\n            <p className=\"CommentText\">{comment.body}</p>\n            <Voter\n              votes={comment.votes}\n              type=\"comments\"\n              id={comment.comment_id}\n            />\n            <h6 className=\"CommentText\">Created at: {comment.created_at}</h6>\n            {user === comment.author && (\n              <button className=\"DeleteButton\" onClick={handleDelete}>\n                Delete\n              </button>\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default CommentList;\n","import React, { Component } from 'react';\nimport { Link } from '@reach/router';\nimport * as api from '../utils/axiosRequests';\nimport Voter from './Voter';\nimport CommentList from './CommentList';\nimport ErrorPage from './ErrorPage';\n\nclass SingleArticle extends Component {\n  state = {\n    article: {},\n    comments: [],\n    commentToPost: '',\n    err: '',\n    commentWarning: ''\n  };\n\n  handleChange = event => {\n    this.setState({ commentToPost: event.target.value });\n  };\n\n  handlePostComment = event => {\n    event.preventDefault();\n    if (!this.state.commentToPost || !this.props.user) {\n      this.setState({\n        commentWarning:\n          'You must be signed in and have filled in the comment box in order to post a comment'\n      });\n    } else {\n      let commentToPost = this.state.commentToPost;\n      let user = this.props.user;\n      let article_id = this.props.article_id;\n\n      api\n        .postComment(commentToPost, user, article_id)\n        .then(({ data: { comment } }) => {\n          this.setState(currentState => {\n            return {\n              comments: [comment, ...currentState.comments],\n              commentToPost: ''\n            };\n          });\n        })\n        .catch(({ response }) => {\n          this.setState({ err: response.data.msg, isLoading: false });\n        });\n    }\n  };\n\n  handleDelete = event => {\n    let comment_id = event.target.parentElement.id;\n    api.deleteComment(comment_id).then(() => {\n      api\n        .getArticleComments(this.props.article_id)\n        .then(comments => {\n          this.setState({ comments: comments });\n        })\n        .catch(({ response }) => {\n          this.setState({ err: response.data.msg, isLoading: false });\n        });\n    });\n  };\n\n  componentDidMount() {\n    Promise.all([\n      api.getSingleArticle(this.props.article_id),\n      api.getArticleComments(this.props.article_id)\n    ])\n      .then(resolutions => {\n        this.setState({\n          article: resolutions[0],\n          comments: resolutions[1]\n        });\n      })\n      .catch(({ response }) => {\n        this.setState({ err: response.data.msg, isLoading: false });\n      });\n  }\n\n  render() {\n    console.log(this.props.user, 'this props user');\n    return (\n      <div id={this.props.article_id}>\n        {this.state.err ? (\n          <ErrorPage err={this.state.err} />\n        ) : (\n          <>\n            <h2>{this.state.article.title}</h2>\n            <Voter\n              votes={this.state.article.votes}\n              type=\"articles\"\n              id={this.props.article_id}\n            />\n            <Link to={`/${this.state.article.topic}`}>\n              <h6>See all {this.state.article.topic} stories</h6>\n            </Link>\n            <p>{this.state.article.body}</p>\n            <h4>Comments</h4>\n            <form onSubmit={this.handlePostComment}>\n              <h3>Post a comment: </h3>\n              <textarea\n                className=\"CommentInput\"\n                name=\"commentPost\"\n                id=\"commentPost\"\n                onChange={this.handleChange}\n                value={this.state.commentToPost}\n                placeholder={this.state.commentWarning}\n              ></textarea>\n              <input type=\"submit\" />\n            </form>\n            {this.state.comments && (\n              <CommentList\n                comments={this.state.comments}\n                handleDelete={this.handleDelete}\n                user={this.props.user}\n              />\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\nexport default SingleArticle;\n","import './App.css';\nimport React, { Component } from 'react';\nimport Header from './components/Header';\nimport NavBar from './components/NavBar';\nimport ArticleList from './components/ArticleList';\nimport SingleArticle from './components/SingleArticle';\nimport ErrorPage from './components/ErrorPage';\nimport { Router } from '@reach/router';\n\nclass App extends Component {\n  state = {\n    username: 'jessjelly'\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header user={this.state.username} />\n        <NavBar />\n        <Router className=\"ArticleView\">\n          <ArticleList path=\"/\" mainFeed={true} />\n          <ArticleList path=\"/:topic\" mainFeed={false} />\n          <SingleArticle\n            path=\"/:topic/:article_id\"\n            user={this.state.username}\n          />\n          <ErrorPage default />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}